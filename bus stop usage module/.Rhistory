"timestamp" : ISODate(' + as.character(Sys.time()) +')
}'))
a <- c(
cbind('{
"_id" : ObjectId("59e6e2feca956e76e805762b"),
"query_id" : 1,
"busService" : "A2",
"sourceBusStop" : "COM2",
"destinationBusStop" : "Opp_Kent_Ridge_MRT",
"ETA" : "",
"estimatedVolume" : "",
"timestamp" : ISODate(',as.character(Sys.time()),')
}'))
a <- c(
paste0('{
"_id" : ObjectId("59e6e2feca956e76e805762b"),
"query_id" : 1,
"busService" : "A2",
"sourceBusStop" : "COM2",
"destinationBusStop" : "Opp_Kent_Ridge_MRT",
"ETA" : "",
"estimatedVolume" : "",
"timestamp" : ISODate(',as.character(Sys.time()),')
}'))
a
queryList$insert(a)
a <- c(
paste0('{
"_id" : ObjectId("59e6e2feca956e76e805762b"),
"query_id" : 1,
"busService" : "A2",
"sourceBusStop" : "COM2",
"destinationBusStop" : "Opp_Kent_Ridge_MRT",
"ETA" : "",
"estimatedVolume" : "",
"timestamp" : ISODate("',as.character(Sys.time()),'")
}'))
queryList$insert(a)
a
a <- c(
paste0('{
"_id" : ObjectId("59e6e2feca956e76e805762b"),
"query_id" : 1,
"busService" : "A2",
"sourceBusStop" : "COM2",
"destinationBusStop" : "Opp_Kent_Ridge_MRT",
"ETA" : "",
"estimatedVolume" : "",
"timestamp" : {"$date": ISODate("',as.character(Sys.time()),'")}
}'))
a
queryList$insert(a)
a <- c(
paste0('{
"_id" : ObjectId("59e6e2feca956e76e805762b"),
"query_id" : 1,
"busService" : "A2",
"sourceBusStop" : "COM2",
"destinationBusStop" : "Opp_Kent_Ridge_MRT",
"ETA" : "",
"estimatedVolume" : "",
"timestamp" : {"$date": "',as.character(Sys.time()),'"}
}'))
queryList$insert(a)
a
Sys.time()
a
a <- c(
paste0('{
"query_id" : 1,
"busService" : "A2",
"sourceBusStop" : "COM2",
"destinationBusStop" : "Opp_Kent_Ridge_MRT",
"ETA" : "",
"estimatedVolume" : "",
"timestamp" : {"$date": "',as.character(Sys.time()),'"}
}'))
queryList$insert(a)
a <- c(
paste0('{
"query_id" : 1,
"busService" : "A2",
"sourceBusStop" : "COM2",
"destinationBusStop" : "Opp_Kent_Ridge_MRT",
"ETA" : "",
"estimatedVolume" : "",
"timestamp" : {"$date": "',substring(as.character(Sys.time()), 0, 10),'Z', substring(as.character(Sys.time()), 12, 19),'"}
}'))
a
queryList$insert(a)
a <- c(
paste0('{
"query_id" : 1,
"busService" : "A2",
"sourceBusStop" : "COM2",
"destinationBusStop" : "Opp_Kent_Ridge_MRT",
"ETA" : "",
"estimatedVolume" : "",
"timestamp" : {"$date": "',substring(as.character(Sys.time()), 0, 10),'T', substring(as.character(Sys.time()), 12, 19), 'Z','"}
}'))
queryList$insert(a)
mongo(url = "mongodb://soraares:bt3103@ds125565.mlab.com:25565/bt3103")
runApp()
runApp('D:/Git/Route-Ranger/Crowdsourcing of Bus Volume (Integrated)Bugg.R')
runApp('D:/Git/Route-Ranger/Crowdsourcing of Bus Volume (Integrated)Bugg.R')
runApp()
library(mongolite)
library(DT)
library(jsonlite)
library(ggplot2)
library(shiny)
library(forecast)
library(TTR)
queryList <- mongo(db = "local", collection = "queryList")
a<-querylist$find()
a<-queryList$find()
a
b <- table(cut(a$timestamp, breaks="day"))
b
ts(b)
plot(ts(b))
ts.plot(ts(b))
c<-data.frame(ts(b))
c
a<-querylist$find()
a<-queryList$find()
b <- table(cut(a$timestamp, breaks="day"))
b
c<-data.frame(ts(b))
c
row.names(c) <- c("date", "freq")
typeof(c)
data.frame(c)
c<-data.frame(c)
typeof(c)
c$ts.b.
c$ts
c$ts.b.1
c$ts.b.2
c$ts.b.2017-09-05
c$ts.b."2017-09-05"
ggplot(c)
ts.plot(c)
b
y<-ts(y,freq=12,start=c(2000,1))
y<-arima.sim(model=list(order=c(2,1,1),ar=c(0.5,.3),ma=0.3),n=144)
y
b
type(b)
typeof(b)
a
b<-table(cut(a$timestamp, breaks ="day"))
typeof(b)
y<-ts(b,freq=12,start=c(2000,1))
y
y<-ts(b)
y
yfor<-forecast(y)
yfor
yfor<-SMA(y, 3)
yfor
pd<-funggcast(y,yfor)
library(forecast)
library(forecast)
pd<-forecast::funggcast(y,yfor)
pd<-Forecast::funggcast(y,yfor)
pd<-funggcast(y,yfor)
library(mongolite)
library(jsonlite)
library(DT)
library(ggplot2)
library(shiny)
library(forecast)
library(TTR)
pd<-funggcast(y,yfor)
yfor
typeof(yfor)
y
b
b<-data.frame(b)
b
ggplot() + geom_line(x=b$Var1,y=b$Freq)
ggplot() + geom_line(aes(x=b$Var1,y=b$Freq))
ggplot() + geom_point(aes(x=b$Var1,y=b$Freq))
ggplot() + geom_line(aes(x=b$Var1,y=b$Freq, group=b$Var1))
ggplot(b)
ggplot(b,aes(x=b$Var1, y=b$Freq))
ggplot(b,aes(x=b$Var1, y=b$Freq, group=1))
ggplot(b,aes(x=b$Var1, y=b$Freq, group=1))
runApp()
b
SMA(b$Freq)
SMA(b$Freq, 3)
b
data.frame(b$Var1, SMA(b$Freq, 3))
runApp()
data.frame(b$Var1, SMA(b$Freq, 3), "a")
runApp()
b
SMA(ts(b$Freq),3)
data.frame(SMA(ts(b$Freq),3))
d<-data.frame(SMA(ts(b$Freq),3))
colnames(d) <- c("Count")
d
runApp()
runApp()
b
SMA(ts(b$Freq), 3)
data.frame(b$Freq, SMA(ts(b$Freq), 3))
runApp()
data.frame(b$Var1, SMA(ts(b$Freq), 3))
typeof9b)
typeof(b)
runApp()
library(mongolite)
library(jsonlite)
library(DT)
library(ggplot2)
library(shiny)
library(forecast)
library(TTR)
queryList <- mongo(db = "local", collection = "queryList")
a<- queryList$find()
b <- table(cut(a$timestamp, breaks = "day"))
b
boarding <- table(cut(a$timestamp, breaks = "day"))
boarding
queryList <- mongo(db = "local", collection = "queryList")
a <- queryList$find()
boarding <- table(cut(a$timestamp, breaks = "day"))
boarding <- data.frame(boarding)
boarding$Group <- paste0("Boarding from ", busStop)
colnames(boarding) <- c("timeFrame", "Count", "Group")
queryList <- mongo(db = "local", collection = "queryList")
a <- queryList$find()
boarding <- table(cut(a$timestamp, breaks = "day"))
boarding <- data.frame(boarding)
boarding$Group <- paste0("Boarding from ", "COM2")
colnames(boarding) <- c("timeFrame", "Count", "Group")
boarding
boardingSMA <- data.frame(boarding$timeFrame, SMA(ts(boarding$Count), 3), paste0("Boarding from", busStop, "predicted"))
boardingSMA <- data.frame(boarding$timeFrame, SMA(ts(boarding$Count), 3), paste0("Boarding from COM2 predicted"))
boardingSMA
runApp()
queryList <- mongo(db = "local", collection = "queryList")
a <- queryList$find()
boarding2 <- table(cut(a$timestamp, breaks = "day"))
boarding2 <- data.frame(boarding)
boarding2$Group <- paste0("Boarding from ", "COM2")
colnames(boarding2) <- c("timeFrame", "Count", "Group")
boarding <- table(cut(a$timestamp, breaks = "day"))
boarding <- data.frame(boarding)
boarding$Group <- paste0("Boarding from ", "COM2")
colnames(boarding) <- c("timeFrame", "Count", "Group")
rbind(boarding2, board
)
queryList <- mongo(db = "local", collection = "queryList")
a <- queryList$find()
boarding2 <- table(cut(a$timestamp, breaks = "day"))
boarding2 <- data.frame(boarding)
boarding2$Group <- paste0("Boarding from ", "COM2")
colnames(boarding2) <- c("timeFrame", "Count", "Group")
boarding <- table(cut(a$timestamp, breaks = "day"))
boarding <- data.frame(boarding)
boarding$Group <- paste0("Boarding from ", "COM2")
colnames(boarding) <- c("timeFrame", "Count", "Group")
rbind(boarding2, boarding)
runApp()
boardingSMA <- data.frame(boarding$timeFrame, SMA(ts(boarding$Count), 3), paste0("Boarding from COM2 predicted"))
boardingSMA
time <- ts(boarding$Count)
time <- SMA(ts(boarding$Count), 3)
boardingSMA <- data.frame(boarding$timeFrame, time, paste0("Boarding from COM2 predicted"))
time <- SMA(ts(boarding$Count), 3)
boardingSMA <- data.frame(boarding$timeFrame, time, paste0("Boarding from COM2 predicted"))
boardingSMA
typeof(time)
typeof(ts(b))
ts(b)
typeof(SMA(ts(boarding$Count),3))
boardingSMA2 <- data.frame(boarding2$timeFrame, time, paste0("Boarding from COM2 predicted"))
rbind(boardingSMA, boardingSMA2)
colnames(boardingSMA) <- c("timeFrame", "Count", "Group")
colnames(boardingSMA2) <- c("timeFrame", "Count", "Group")
rbind(boardingSMA, boardingSMA2)
boardingSMA[2,]
boardingSMA[2:10,]
a<-boardingSMA[3:10,]
n<-boardingSMA2[3:10,]
rbind(a,n)
db <- mongo(url = "mongodb://soraares:bt3103@3103-shard-00-00-rgv6u.mongodb.net:27017,3103-shard-00-01-rgv6u.mongodb.net:27017,3103-shard-00-02-rgv6u.mongodb.net:27017/test?ssl=true&replicaSet=3103-shard-0&authSource=admin"
db <- mongo(url = "mongodb://soraares:bt3103@3103-shard-00-00-rgv6u.mongodb.net:27017,3103-shard-00-01-rgv6u.mongodb.net:27017,3103-shard-00-02-rgv6u.mongodb.net:27017/test?ssl=true&replicaSet=3103-shard-0&authSource=admin"
)
db <- mongo(url = "mongodb://soraares:bt3103@3103-shard-00-00-rgv6u.mongodb.net:27017,3103-shard-00-01-rgv6u.mongodb.net:27017,3103-shard-00-02-rgv6u.mongodb.net:27017/test?ssl=true&replicaSet=3103-shard-0&authSource=admin")
library(mongolite)
library(jsonlite)
library(DT)
library(ggplot2)
library(shiny)
library(forecast)
library(TTR)
db <- mongo(url = "mongodb://soraares:bt3103@3103-shard-00-00-rgv6u.mongodb.net:27017,3103-shard-00-01-rgv6u.mongodb.net:27017,3103-shard-00-02-rgv6u.mongodb.net:27017/test?ssl=true&replicaSet=3103-shard-0&authSource=admin")
db.test$find()
db$test$find()
db.find()
db$find()
db <- mongo(url = "mongodb://soraares:bt3103@3103-shard-00-00-rgv6u.mongodb.net:27017,3103-shard-00-01-rgv6u.mongodb.net:27017,3103-shard-00-02-rgv6u.mongodb.net:27017/test?ssl=true&replicaSet=3103-shard-0&authSource=admin",
collection = "TRR")
db.find()
db$find()
db$find()
db <- mongo(url = "mongodb://soraares:bt3103@3103-shard-00-00-rgv6u.mongodb.net:27017,3103-shard-00-01-rgv6u.mongodb.net:27017,3103-shard-00-02-rgv6u.mongodb.net:27017/test?ssl=true&replicaSet=3103-shard-0&authSource=admin",
db = "trr", collection = "busCollection")
db <- mongo(url = "mongodb://soraares:<PASSWORD>@therouteranger-shard-00-00-rgv6u.mongodb.net:27017,therouteranger-shard-00-01-rgv6u.mongodb.net:27017,therouteranger-shard-00-02-rgv6u.mongodb.net:27017/test?ssl=true&replicaSet=TheRouteRanger-shard-0&authSource=admin",
db = "trr", collection = "busCollection")
db <- mongo(url = "mongodb://soraares:bt3103@therouteranger-shard-00-00-rgv6u.mongodb.net:27017,therouteranger-shard-00-01-rgv6u.mongodb.net:27017,therouteranger-shard-00-02-rgv6u.mongodb.net:27017/test?ssl=true&replicaSet=TheRouteRanger-shard-0&authSource=admin",
db = "trr", collection = "busCollection")
db$find()
runApp()
runApp()
library(mongolite)
library(jsonlite)
library(DT)
library(ggplot2)
library(shiny)
library(forecast)
library(TTR)
library(mongolite)
library(jsonlite)
library(DT)
library(ggplot2)
library(shiny)
library(forecast)
queryList <- mongo(db = "local", collection = "queryList")
a<-queryList$find()
b<-table(cut(a$timestamp, breaks = "day"))
b
b<-data.frame(b)
b
b
boarding<-b
boarding
boarding <- data.frame(boarding)
boarding$Group <- paste0("Boarding from ", busStop)
boarding$Group <- paste0("Boarding from COM2")
colnames(boarding) <- c("timeFrame", "Count", "Group")
boarding
boardingSMA <- data.frame(boarding$timeFrame, SMA(ts(boarding$Count), 3), paste0("Boarding from", busStop, "predicted"))
boardingSMA <- data.frame(boarding$timeFrame, SMA(ts(boarding$Count), 3), paste0("Boarding from COM2 predicted"))
boardingSMA
boardingSMA <- boardingSMA[3:,]
boardingSMA <- boardingSMA[3:nrow(boardingSMA),]
boardingSMA
boardingSMA[1,]
runApp()
runApp()
b
b$Var1[1]
b$Var1[1,]
b$Var1[,1]
typeof(b)
b$Var1
b$Var1[1]
b$Var1[2]
runApp()
b
typof(b$Var1[1])
typeof(b$Var1[1])
runApp()
runApp()
runApp()
runApp()
runApp()
b
b$Var1[1]
typeof(b$Var1[1])
runApp()
paste('avgVol',1:3,sep="")
for (i in 3) {
print(i)
}
a.names
a.names<-paste('avgVol',1:3,sep="")
a
a.names
typeof(a.names)
for (i in length(a.names)) {
print(i)
}
timestamps <- seq(from = as.POSIXct("2010-10-16 07:00:00"),
to=as.POSIXct("2010-10-16 23:00:00"),
by="hour")
timestamp
timestamps
typeof(timestamps)
avgVolData <- data.frame(busCapacity = sample(15:40, size=17, replace=TRUE))
data <- cbind(avgVol, timestamps)
data <- cbind(avgVolData, timestamps)
data
d.frame <- data
d.frame
typeof(d.frame)
df.names <- paste('avgVol',1:3,sep="")
assign(paste(df.names[i],'_',busStops[i],sep=""), d.frame)
assign(paste(df.names[i],'_','busStops[i]'KentRidgeMRT,sep=""), d.frame)
assign(paste(df.names[i],'_','busStops[i]'KentRidgeMRT',sep=""), d.frame)
avgVolData <- data.frame(busCapacity = sample(15:40, size=17, replace=TRUE)) #Added column name, "busCapacity"
timestamps <- seq(from = as.POSIXct("2010-10-16 07:00:00"),
to=as.POSIXct("2010-10-16 23:00:00"),
by="hour")
avgVolData <- data.frame(busCapacity = sample(15:40, size=17, replace=TRUE)) #Added column name, "busCapacity"
avgVolData <- data.frame(busCapacity = sample(15:40, size=17, replace=TRUE)) #Added column name, "busCapacity"
timestamps <- seq(from = as.POSIXct("2010-10-16 07:00:00"),
to=as.POSIXct("2010-10-16 23:00:00"),
by="hour")
data <- cbind(avgVol, timestamps)
data <- data.frame(data)
avgVolData <- data.frame(busCapacity = sample(15:40, size=17, replace=TRUE)) #Added column name, "busCapacity"
timestamps <- seq(from = as.POSIXct("2010-10-16 07:00:00"),
to=as.POSIXct("2010-10-16 23:00:00"),
by="hour")
data <- cbind(avgVolData, timestamps)
data <- data.frame(data)
dfAvgVol.append(data)
list.append(dfAvgVol,data)
avgVolData <- data.frame(busCapacity = sample(15:40, size=17, replace=TRUE)) #Added column name, "busCapacity"
timestamps <- seq(from = as.POSIXct("2010-10-16 07:00:00"),
to=as.POSIXct("2010-10-16 23:00:00"),
by="hour")
data <- cbind(avgVolData, timestamps)
data <- data.frame(data)
dfAvgVol[['KentRidgeMRT']] <- data
for (i in length(busStops)){
avgVolData <- data.frame(busCapacity = sample(15:40, size=17, replace=TRUE)) #Added column name, "busCapacity"
timestamps <- seq(from = as.POSIXct("2010-10-16 07:00:00"),
to=as.POSIXct("2010-10-16 23:00:00"),
by="hour")
data <- cbind(avgVolData, timestamps)
# d.frame <- data.frame(dbAvgVol$find(query = paste('{"startingStop":', busStops, ' }', sep="")))
#d.frame <- data
# assign dataframe with bus stop name ( avgVol1_kentridge etc. )
#assign(paste(df.names[i],'_',busStops[i],sep=""), d.frame)
#dfAvgVol <- list(ls(pattern='avgVol*'))
data <- data.frame(data)
dfAvgVol[['KentRidgeMRT']] <- data
}
data <- data.frame(data)
data
dfAvgVol[['KentRidgeMRT']] <- data
dfAvgVol <- list()
dfAvgVol[['KentRidgeMRT']] <- data
dfAvgVol
view(dfAvgVol)
View(dfAvgVol)
avgVolData <- data.frame(busCapacity = sample(15:40, size=17, replace=TRUE)) #Added column name, "busCapacity"
timestamps <- seq(from = as.POSIXct("2010-10-16 07:00:00"),
to=as.POSIXct("2010-10-16 23:00:00"),
by="hour")
data <- cbind(avgVolData, timestamps)
data <- data.frame(data)
dfAvgVol[['KentRidgeMRT']] <- data
avgVolData <- data.frame(busCapacity = sample(15:40, size=17, replace=TRUE)) #Added column name, "busCapacity"
timestamps <- seq(from = as.POSIXct("2010-10-16 07:00:00"),
to=as.POSIXct("2010-10-16 23:00:00"),
by="hour")
data <- cbind(avgVolData, timestamps)
data <- data.frame(data)
dfAvgVol[['PGP']] <- data
View(dfAvgVol)
typeof(dfAvgVol)
dfAvgVol[1]
busStops <- list('KentRidgeMRT', 'PGP',"KR")
df.names <- paste('avgVol',1:length(busStops),sep="")
dfAvgVol <- list()
for (i in 1:length(busStops)){
avgVolData <- data.frame(busCapacity = sample(15:40, size=17, replace=TRUE)) #Added column name, "busCapacity"
timestamps <- seq(from = as.POSIXct("2010-10-16 07:00:00"),
to=as.POSIXct("2010-10-16 23:00:00"),
by="hour")
data <- cbind(avgVolData, timestamps)
# d.frame <- data.frame(dbAvgVol$find(query = paste('{"startingStop":', busStops, ' }', sep="")))
#d.frame <- data
# assign dataframe with bus stop name ( avgVol1_kentridge etc. )
#assign(paste(df.names[i],'_',busStops[i],sep=""), d.frame)
#dfAvgVol <- list(ls(pattern='avgVol*'))
data <- data.frame(data)
dfAvgVol[[busStops[i]]] <- data
}
for (i in 1:length(busStops)){
avgVolData <- data.frame(busCapacity = sample(15:40, size=17, replace=TRUE)) #Added column name, "busCapacity"
timestamps <- seq(from = as.POSIXct("2010-10-16 07:00:00"),
to=as.POSIXct("2010-10-16 23:00:00"),
by="hour")
data <- cbind(avgVolData, timestamps)
# d.frame <- data.frame(dbAvgVol$find(query = paste('{"startingStop":', busStops, ' }', sep="")))
#d.frame <- data
# assign dataframe with bus stop name ( avgVol1_kentridge etc. )
#assign(paste(df.names[i],'_',busStops[i],sep=""), d.frame)
#dfAvgVol <- list(ls(pattern='avgVol*'))
data <- data.frame(data)
dfAvgVol[[busStops[[i]]]] <- data
}
View(dfAvgVol)
shiny::runApp()
runApp()
runApp('D:/Git/Route-Ranger/Crowdsourcing of Bus Volume (Integrated)Bugg.R')
runApp('D:/Git/Route-Ranger/Crowdsourcing of Bus Volume (Integrated)Bugg.R')
{"$date": "',substring(as.character(Sys.time()), 0, 10),'T', substring(as.character(Sys.time()), 12, 19), 'Z','"}
'{"$date": "',substring(as.character(Sys.time()), 0, 10),'T', substring(as.character(Sys.time()), 12, 19), 'Z','"}'
paste0('{"$date": "',substring(as.character(Sys.time()), 0, 10),'T', substring(as.character(Sys.time()), 12, 19), 'Z','"}')
a<-paste0('{"$date": "',substring(as.character(Sys.time()), 0, 10),'T', substring(as.character(Sys.time()), 12, 19), 'Z','"}')
toJSON(a)
